#!/usr/bin/env python

import json
import sys
from urllib.parse import urlencode

import requests


def get_company_by_name(name):
    cw_id = None
    transformed_name = urlencode({"company_name": name.lower()})
    res = requests.get("http://api.corpwatch.org/companies.json?" + transformed_name)
    root = json.loads(res.text)
    if "companies" in root["result"]:
        companies = root["result"]["companies"]
        all_cw_ids = [companies[c]["top_parent_id"] for c in companies]
        # Find the parent id which occurs the most frequently.
        cw_id = sorted(
            map(lambda id: (id, all_cw_ids.count(id)), list(set(all_cw_ids))),
            key=lambda tup: tup[1],
        )[-1][0]
    return cw_id


def get_child_companies(cw_id):
    child_companies = None
    res = requests.get("http://api.corpwatch.org/companies.json?top_parent_id=" + cw_id)
    root = json.loads(res.text)
    all_c = root["result"]["companies"]
    child_companies = [(all_c[c]["company_name"], all_c[c]["cw_id"]) for c in all_c]
    return child_companies


def main():
    cw_id = get_company_by_name(sys.argv[1])

    if cw_id and cw_id != -1:
        child_companies = get_child_companies(cw_id)
        for company in child_companies:
            print("Company name = %s\nCompany CorpWatch ID = %s\n" % company)
        print("%d total subsidiaries" % len(child_companies))
    else:
        print("Could not locate company in SEC filings")


if __name__ == "__main__":
    if len(sys.argv) > 1:
        main()

#!/usr/bin/env bash
# use "q" to quit swappy, if not, file not save
# as edited.png
set -ueo pipefail

mkdir -p /tmp/screenshots
cd /tmp/screenshots || exit 1

hyprctl keyword decoration:dim_strength 0
hyprctl keyword animations:enabled false

case ${1:-monitor} in
	window)
		at="$(hyprctl activewindow | awk '/at:/ {print $2}')"
		size="$(hyprctl activewindow | awk '/size:/ {print $2}' | tr ',' 'x')"
		output="${at} ${size}"
		grim -g "$output" -t png area.png
		;;
	monitor | selection)
		output=$(hyprctl monitors -j | jq -r '.[] | select(.focused)' | jq -r '.name')
		grim -o "$output" -t png screen.png
		geometry="$(slurp -b '#AFAFAFAF' -c '#FF3F3FAF' -s '#00000000' -w 3 -d -o)"
		vimiv -f -s statusbar.show false screen.png &

		sleep 0.3 # slurp needs time to remove the red border...

		if [ -n "$geometry" ]; then
			grim -g "$geometry" -t png area.png
		else
			grim -t png area.png
		fi

		kill $!
		;;
	*)
		printf "Usage: %s [ monitor | window | selection ]" "$0"
		exit 0
		;;
esac

[ -f area.png ] && swappy -f area.png -o edited.png &&
	convert edited.png \
		\( +clone -alpha extract \
		-draw 'fill black polygon 0,0 0,15 15,0 fill white circle 15,15 15,0' \
		\( +clone -flip \) -compose Multiply -composite \
		\( +clone -flop \) -compose Multiply -composite \
		\) -alpha off -compose CopyOpacity -composite rounded.png &&
	wl-copy < rounded.png

hyprctl keyword decoration:dim_strength 0.2
hyprctl keyword animations:enabled true

rm -f screen.png area.png rounded.png edited.png

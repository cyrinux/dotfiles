#!/bin/bash
set -euo pipefail

nm-online -t 60 -q

error='503 Service Temporarily Unavailable'
accountfile=~/.dotfiles-private/.config/netatmo_account.json
tokenfile=${XDG_CACHE_HOME:-$HOME/.cache}/netatmo_token.json
datafile=${XDG_CACHE_HOME:-$HOME/.cache}/netatmo_data.json
publicdatafile=${XDG_CACHE_HOME:-$HOME/.cache}/netatmo_public_data.json
client_id=$(jq -r ".client_id" $accountfile)
client_secret=$(jq -r ".client_secret" $accountfile)
username=$(jq -r ".username" $accountfile)
password=$(jq -r ".password" $accountfile)
device_id=$(jq -r ".device_id" $accountfile)
lat_ne="48.857816"
lon_ne="2.380255"
lat_sw="48.857810"
lon_sw="2.380250"
authurl="https://api.netatmo.net/oauth2/token"

if [ ! -f "$tokenfile" ] || ! grep -q "$error" "$tokenfile"; then
	curl -s -d "grant_type=password&client_id=${client_id}&client_secret=${client_secret}&username=${username}&password=${password}&scope=read_station" "${authurl}" > "${tokenfile}"
fi

atoken=$(jq -r ".access_token" "$tokenfile")
rtoken=$(jq -r ".refresh_token" "$tokenfile")
expiration=$(jq -r ".expires_in" "$tokenfile")
[ -z "$expiration" ] && rm "$tokenfile"

filedate=$(date "+%Y-%m-%d %H:%M:%S" -r "$tokenfile")
filedate=$(date -d "$filedate" +%s)
limittime=$((filedate + expiration))
currenttime=$(date +%s)

if [ "$limittime" -lt "$currenttime" ]; then
	echo "Using refresh token"
	curl -s -d "grant_type=refresh_token&refresh_token=${rtoken}&client_id=${client_id}&client_secret=${client_secret}" "${authurl}" > "$tokenfile"
	atoken=$(jq -r ".access_token" "$tokenfile")
fi

curl -s -d "access_token=${atoken}&device_id=${device_id}" "https://api.netatmo.net/api/getstationsdata" > "$datafile" || exit 0
intemp=$(jq -r ".body.devices[0].dashboard_data.Temperature" "$datafile")
inhumi=$(jq -r ".body.devices[0].dashboard_data.Humidity" "$datafile")
innoise=$(jq -r ".body.devices[0].dashboard_data.Noise" "$datafile")
intemptrend=$(jq -r ".body.devices[0].dashboard_data.temp_trend" "$datafile")
extemptrend=$(jq -r ".body.devices[0].dashboard_data.temp_trend" "$datafile")
pres=$(jq -r ".body.devices[0].dashboard_data.Pressure" "$datafile")
co2=$(jq -r ".body.devices[0].dashboard_data.CO2" "$datafile")

curl -s -d "access_token=${atoken}&device_id=${device_id}&lat_ne=${lat_ne}&lon_ne=${lon_ne}&lat_sw=${lat_sw}&lon_sw=${lon_sw}&required_data=rain&filter=true" "https://api.netatmo.net/api/getpublicdata" > "$publicdatafile" || exit 0
extemp=$(jq -r '.body[] | select(._id == "70:ee:50:32:d4:78") | .measures["02:00:00:32:d5:46"]["res"][][0]' "$publicdatafile")
exhumi=$(jq -r '.body[] | select(._id == "70:ee:50:32:d4:78") | .measures["02:00:00:32:d5:46"]["res"][][1]' "$publicdatafile")
expres=$(jq -r '.body[] | select(._id == "70:ee:50:32:d4:78") | .measures["70:ee:50:32:d4:78"]["res"][][]' "$publicdatafile")
rainlive=$(jq -r '.body[] | select(._id == "70:ee:50:32:d4:78") | .measures["05:00:00:04:bd:ac"]["rain_live"]' "$publicdatafile")
extemptrend=""

if [ $(bc <<< "$extemp > 26.0") -eq 1 ] && [ $(bc <<< "$intemp > $extemp") -eq 1 ]; then
	class="high"
else
	class="low"
fi

if [ $(bc <<< "$intemp > 25.0") -eq 1 ]; then
	icon="<span foreground='#F44336'></span>"
else
	icon="<span foreground='#928374'></span>"
fi

case $intemptrend in
	"up") in_trend='' ;;
	"down") in_trend='' ;;
	"stable") in_trend='' ;;
	*) in_trend='' ;;
esac

case $extemptrend in
	"up") ex_trend='' ;;
	"down") ex_trend='' ;;
	"stable") ex_trend='' ;;
	*) ex_trend='' ;;
esac

tooltip="$in_trend Indoor:\n\nTemperature ${intemp}°C, Humidity ${inhumi}%, Pressure ${pres} hPa\nNoise ${innoise} Db\n\n$ex_trend Outdoor:\n\nTemperature ${extemp}°C, Humidity ${exhumi}%, CO2 ${co2}ppm, Pressure ${expres} hPa, Rain ${rainlive}mm\n"
text="<span foreground='#928374'>$intemp°C</span>"

printf '{"text": " %s ", "tooltip": "%s", "class": "%s"}\n' "$icon $text" "$tooltip" "$class"

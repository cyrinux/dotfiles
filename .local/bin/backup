#!/usr/bin/sh

SOURCE=".dotfiles $XDG_CACHE_HOME/mail* $XDG_CACHE_HOME/tarsnap.key library/contacts library/calendars .dotfiles .dotfiles-private .ssh .gnupg .mail $XDG_DATA_HOME/aurutils $XDG_DATA_HOME/wl-clipboard-manager .zsh-history .zsh_history Vault .password-store .kube .azure"

BACKUP_PATH=("/run/media/${USER}/PortableSSD/backup_${USER}_laptop_DONTREMOVE" "/run/media/${USER}/SURVIVOR/backup_${USER}_laptop_DONTREMOVE")

error() {
	echo >&2 "$@"
	exit 1
}

for backup_path in "${BACKUP_PATH[@]}"; do
	if [ ! -d $backup_path ]; then
		echo "Backup device '$backup_path' does not exist, aborting. Start 'open-vault 120'"
		continue
	fi
	BACKUP_DIR="${backup_path}/$(date +%Y-%m-%d)"

	if [ -d $BACKUP_DIR ]; then
		read -p "Backup directory '$BACKUP_DIR' already exists, merge? [y/n] " -n 1 -r
		echo
		if [[ ! $REPLY =~ ^[Yy]$ ]]; then
			error "Aborted."
		fi
	fi

	while true; do
		[ -f $HOME/Vault/.lock ] && break
		sleep 1
	done

	cd "$HOME"

	echo -e "\nBackup STARTED\n\nSource(s):   $SOURCE\nDestination: $BACKUP_DIR\n"
	rsync -a --delete --info=progress2 $SOURCE $BACKUP_DIR
	exitcode=$?

	if [ "$exitcode" -eq "0" ]; then
		echo -e "\nBackup SUCCESSFUL"
	else
		echo -e "\nBackup FAILED"
	fi

	echo -e "\n-------------------------------------------------------------------"

	echo -e "\nBackup size:\n"
	du -hs $BACKUP_DIR

	echo -e "\nRemaining disk space\n"
	df -kh $backup_path
	echo
done
exit $exitcode

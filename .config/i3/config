# i3 config file (v4)
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

# Set mod key (Mod1=<Alt>, Mod4=<Super>)
set $mod Mod4
set $alt Mod1

# set default desktop layout (default is tiling)
# workspace_layout tabbed <stacking|tabbed>
workspace_layout tabbed

# Configure border style <normal|1pixel|pixel xx|none|pixel>
new_window pixel 1
new_float pixel 0

# Hide borders
hide_edge_borders both

# change borders
# (u)
#bindcode $mod+30 border none
# (y)
#bindcode $mod+29 border pixel 1
# (n)
#bindcode $mod+57 border normal

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango: Taskbar, FontAwesome, Cantarell 8

# Use Mouse+$mod to drag floating windows
floating_modifier $mod

# Define NumLock modifier
set $numlock Mod2

# start a terminal
bindsym $mod+Return exec kitty
bindsym $mod+Shift+Return exec kitty /bin/bash

# kill focused window (q)
bindcode $mod+Shift+38 kill

# Fetch mail (shift+F1)
bindcode Shift+67 exec "notify-send -i /usr/share/doc/neomutt/logo/neomutt-128.png 'Mbsync' 'fetching mail...'; systemctl --user start mailsync.service; systemctl --user start mbsync.service"
# Open vault (shift+F2)
bindcode Shift+68 exec "open-vault 240 &"
# Nautilus (shift+F3)
bindcode Shift+69 exec "nautilus &"
# Jira (mod+j)
bindcode $mod+44 exec "jira-popup &"

# Start a launcher (=)(d)(o)(w)(p)
# mod+=
bindcode $mod+21 exec "pgrep rofi && killall rofi || rofi -normal-window -show calc"
# mod+d
bindcode $mod+40 exec "pgrep rofi && killall rofi || rofi -normal-window -show file-browser"
# mod+u
bindcode $mod+30 exec "pgrep rofi && killall rofi || dmenuunicode"
# mod+w
bindcode $mod+52 exec "pgrep rofi && killall rofi || surfraw-rofi"
# mod+Shift+w
bindcode $mod+Shift+52 exec "surfraw duckduckgo -j $(xclip -o -selection clipboard)"
# mod+p
bindcode $mod+33 exec "pgrep rofi && killall rofi || rofi-pass"
# mod+Shift++p
bindcode $mod+Control+33 exec "pgrep rofi && killall rofi || keepmenu"
# mod+!
bindcode $mod+61 exec "pgrep rofi && killall rofi || mpdmenu"
# mod+b
bindcode $mod+56 exec "pgrep rofi && killall rofi || rofi-pinboard"
# Alt+Tab
bindcode $alt+23 exec "pgrep rofi && killall rofi || rofi -combi-modi window,drun -show combi -modi combi"


################################################################################################
# sound-section - DO NOT EDIT if you wish to automatically upgrade Alsa -> Pulseaudio later!   #
################################################################################################
# Audio settings
bindsym $mod+Shift+p mode "$mode_audio"
set $mode_audio Audio: (p)avucontrol, connect (s)hure-bt1, pulse(e)ffects
mode "$mode_audio" {
    # (p)
    bindcode 33 exec pavucontrol, mode "default"
    # (e)
    bindcode 26 exec pulseeffects, mode "default"
    # (s)
    bindcode 39 exec connect-shure-bt1, mode "default"

    # exit system mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym XF86AudioMute         exec py3-cmd click 1 volume_status
bindsym XF86AudioRaiseVolume  exec py3-cmd click 4 volume_status
bindsym XF86AudioLowerVolume  exec py3-cmd click 5 volume_status
bindsym XF86AudioPlay exec playerctl -a play-pause
bindsym XF86AudioPrev exec playerctl -a previous
bindsym XF86AudioNext exec playerctl -a next

################################################################################################

# Screen brightness controls
bindsym XF86MonBrightnessUp   exec set-brightness inc
bindsym XF86MonBrightnessDown exec set-brightness dec
bindsym Shift+XF86MonBrightnessUp   exec set-brightness inc
bindsym Shift+XF86MonBrightnessDown exec set-brightness dec

# Start Applications
# mod+n
bindcode $mod+57 exec networkmanager_dmenu
# mod+m
bindcode $mod+47 exec UDISKIE_DMENU_LAUNCHER="rofi" udiskie-dmenu -p "Mount" -matching regex -dmenu -i -no-custom -multi-select
# mod+F1
bindcode $mod+67 exec "autorandr --change; sudo systemctl stop pcscd.service 2>/dev/null"
# display
bindsym XF86Display --release exec autorandr --change
# mod+control+t
bindcode $mod+Ctrl+28 --release exec "killall compton; compton &; notify-send 'restart compton'"
# mod+Shift+d
bindcode $mod+Shift+40 --release exec "killall dunst; exec notify-send 'restart dunst'"
# mod+scroll_lock
bindsym $mod+Scroll_Lock exec "killall screenkey || screenkey"
# printscreen
bindsym Print exec flameshot full -p ~/Pictures/Screenshots -c
# mod+printscreen
bindsym $mod+Print exec "flameshot gui"

# Refresh py3status module after switching keyboard layout (Shift+Shift)
bindcode Shift+50 exec "py3-cmd refresh keyboard_layout"
bindcode Shift+62 exec "py3-cmd refresh keyboard_layout"

# calendar (c)
bindcode $mod+54 exec gsimplecal

# mod+F7
bindcode $mod+73 exec feh /home/cyril/Pictures/ru.png
# mod+F8
bindcode $mod+74 exec feh /home/cyril/Pictures/kak_keybinding.png

# search
bindsym XF86Search exec chromium https://search.levis.ws/

# Workspaces
focus_follows_mouse no

set $workspace1 workspace number 1
set $workspace2 workspace number 2
set $workspace3 workspace number 3
set $workspace4 workspace number 4
set $workspace5 workspace number 5
set $workspace6 workspace number 6
set $workspace7 workspace number 7
set $workspace8 workspace number 8
set $workspace9 workspace number 9
set $workspace0 workspace number 10

# Switch to workspace using keypad
bindcode $numlock+$mod+87 $workspace1
bindcode $numlock+$mod+88 $workspace2
bindcode $numlock+$mod+89 $workspace3
bindcode $numlock+$mod+83 $workspace4
bindcode $numlock+$mod+84 $workspace5
bindcode $numlock+$mod+85 $workspace6
bindcode $numlock+$mod+79 $workspace7
bindcode $numlock+$mod+80 $workspace8
bindcode $numlock+$mod+81 $workspace9
bindcode $numlock+$mod+90 $workspace0

# Switch to workspace using number row
bindsym $mod+1 $workspace1
bindsym $mod+2 $workspace2
bindsym $mod+3 $workspace3
bindsym $mod+4 $workspace4
bindsym $mod+5 $workspace5
bindsym $mod+6 $workspace6
bindsym $mod+7 $workspace7
bindsym $mod+8 $workspace8
bindsym $mod+9 $workspace9
bindsym $mod+0 $workspace0

# Move window to workspace using keypad
bindcode $numlock+$mod+Shift+87 move container to $workspace1
bindcode $numlock+$mod+Shift+88 move container to $workspace2
bindcode $numlock+$mod+Shift+89 move container to $workspace3
bindcode $numlock+$mod+Shift+83 move container to $workspace4
bindcode $numlock+$mod+Shift+84 move container to $workspace5
bindcode $numlock+$mod+Shift+85 move container to $workspace6
bindcode $numlock+$mod+Shift+79 move container to $workspace7
bindcode $numlock+$mod+Shift+80 move container to $workspace8
bindcode $numlock+$mod+Shift+81 move container to $workspace9
bindcode $numlock+$mod+Shift+90 move container to $workspace0

# Move window to workspace using number row
bindsym $mod+Shift+1 move container to $workspace1
bindsym $mod+Shift+2 move container to $workspace2
bindsym $mod+Shift+3 move container to $workspace3
bindsym $mod+Shift+4 move container to $workspace4
bindsym $mod+Shift+5 move container to $workspace5
bindsym $mod+Shift+6 move container to $workspace6
bindsym $mod+Shift+7 move container to $workspace7
bindsym $mod+Shift+8 move container to $workspace8
bindsym $mod+Shift+9 move container to $workspace9
bindsym $mod+Shift+0 move container to $workspace0


# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# workspace back and forth (with/without active container)
workspace_auto_back_and_forth yes

# split orientation
# (mod+h)
bindcode $mod+43 split h;exec notify-send 'tile horizontally'
# (mod+v)
bindcode $mod+55 split v;exec notify-send 'tile vertically'
# (mod+q)
bindcode $mod+38 split toggle;exec notify-send 'toggle split'

# move workspace to the right monitor
# mod+Shift+BackSpace
bindcode $mod+Shift+22 move workspace to output right
# mod+BackSpace
bindcode $mod+22 move window to output right

# toggle fullscreen mode for the focused container
# (mod+f)
bindcode $mod+41 fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
# (mod+s)
bindcode $mod+39 layout stacked
# (mod+t)
bindcode $mod+28 layout tabbed
bindcode $mod+26 layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# toggle sticky (Shift+s)
bindcode $mod+Shift+39 sticky toggle

# focus the parent container (mod+a)
bindcode $mod+24 focus parent

# Focus the child container (mod+Shift+a)
bindcode $mod+Shift+24 focus child

# move the currently focused window to the scratchpad
# (mod+Shift+²)
bindcode $mod+Shift+49 move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
# (mod+²)
bindcode $mod+49 scratchpad show

#navigate workspaces next / previous
bindsym $mod+Ctrl+Right workspace next
bindsym $mod+Ctrl+Left workspace prev

# display exploit_menu (mod+Control+u)
bindcode $mod+Ctrl+30 exec exploit_menu

# Specific window configuration
# Bindings to make the webcam float and stick.
for_window [title="webcamfloat"] floating enable
for_window [title="webcamfloat"] sticky enable
for_window [title="webcamfloat"] border pixel 0
no_focus [title="webcamfloat"]
for_window    [window_role="pop-up"]         floating enable
for_window    [class="copyq"]                floating enable
for_window    [class="Peek"]                 floating enable
for_window    [class="Rofi"]                 floating enable
for_window    [class="Chromium"]             move container to $workspace2, title_format "Chromium"
for_window    [class="Wire"]                 move container to $workspace3
for_window    [class="Thunderbird"]          move container to $workspace4
for_window    [class="TeamViewer"]           move container to $workspace9, floating enable, sticky disable
for_window    [class="Zoom"]                 move container to $workspace9, floating enable, sticky disable
for_window    [class="xfreerdp"]             move container to $workspace9
for_window    [class="feh|Keepassx|Mumble|Pavucontrol|Steam|Pulseaudio-equalizer-gtk"] floating enable
for_window    [class="mpv|vaapi"] floating enable
for_window    [title="Preferences$"] floating enable
for_window    [class="Syncthing GTK"] floating enable
for_window    [class="xev"] floating enable
for_window    [class="com-stonesoft-client-launcher-SmcClient|sun-awt-X11-XDialogPeer"] floating enable
for_window    [title="^Qalculate!$"] floating enable
for_window    [class="Tor Browser"] move container to $workspace8, floating enable border normal
for_window    [class="neomutt"] move container to $workspace4
for_window [class="Zathura|zathura"] focus, layout tabbed, border normal

# switch to workspace with urgent window automatically
bindcode $mod+53 [urgent=latest] focus

# reload the configuration file
bindcode $mod+Shift+54 reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindcode $mod+Shift+27 restart

# Set shut down, restart and locking features
bindsym $mod+Escape mode "$mode_system"
set $mode_system (l)ock, (e)xit, (s)uspend, (h)ibernate, (r)eboot, (Shift+s)hutdown, (t)rusted, (u)ntrusted, (x)kill
mode "$mode_system" {
    # (l)
    bindcode 46 exec i3exit lock, mode "default"
    # (s)
    bindcode 39 exec i3exit suspend, mode "default"
    # (g)
    bindcode 42 exec i3exit greeter, mode "default"
    # (e)
    bindcode 26 exec i3exit logout, mode "default"
    # (r)
    bindcode 27 exec i3exit reboot, mode "default"
    # (s)
    bindcode Shift+39 exec i3exit shutdown, mode "default"
    # (t)
    bindcode 28 exec ttoggle -t, mode "default"
    # (u)
    bindcode 30 exec ttoggle -x, mode "default"
    # (x)
    bindcode 53 --release exec xkill, mode "default"

    # exit system mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# Resize window (you can also use the mouse for that)
# (r)
bindcode $mod+27 mode "resize"
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode
        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        # (j)
        bindcode 44 resize shrink width 5 px or 5 ppt
        # (k)
        bindcode 45 resize grow height 5 px or 5 ppt
        # (l)
        bindcode 46 resize shrink height 5 px or 5 ppt
        # (semicolon)
        bindcode 59 resize grow width 5 px or 5 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # exit resize mode: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

# Lock screen
# (l)
bindcode $mod+46 exec i3exit lock
bindcode Control+$alt+46 exec i3exit lock

# Clipboard manager
# (f)
bindcode $mod+Shift+41 exec copyq toggle

# Make floater
# (m)
bindcode $mod+Control+47 floating enable; resize set 320 px 180 px; sticky enable; move window to position 1600 px 24 px

# Color palette used for i3
# Variables are set based on the documentation:
# https://i3wm.org/dovs/userguide.html#variables
# Changing the value of one of the variables will
# effect all the areas with the same color.
# Color scheme (Gruvbox dark)
set $color_normal_white  #a89984
set $color_bright_white  #ebdbb2
set $color_normal_gray   #202020
set $color_bright_gray   #3c3836
set $color_bright_yellow #d79921
set $color_normal_black  #282828
set $color_unused        #ff0000

# Colors                  border                 background             text                   indicator       child_border
client.focused            $color_bright_gray     $color_bright_gray     $color_bright_white    $color_unused   $color_normal_white
client.focused_inactive   $color_bright_gray     $color_bright_gray     $color_bright_white    $color_unused   $color_normal_black
client.unfocused          $color_normal_gray     $color_normal_gray     $color_normal_white    $color_unused   $color_normal_black
client.urgent             $color_bright_yellow   $color_bright_yellow   $color_normal_black    $color_unused   $color_unused
client.placeholder        $color_unused          $color_normal_black    $color_unused          $color_unused   $color_unused

# Start i3bar to display a workspace bar (plus the system information i3status if available)
bar {
        status_command py3status --dbus-notify --config ~/.config/i3/i3status.conf
	position top
	# position bottom
	i3bar_command i3bar
	tray_output none
        # tray_output primary
	strip_workspace_numbers no
  	separator_symbol " | "
        output eDP-1
        output DP-1-1

	colors {
	    # Whole color settings
	    background $color_normal_gray
	    separator  $color_bright_gray
	    statusline $color_bright_white

	    # Type             border                 background              font
	    focused_workspace  $color_bright_gray     $color_bright_gray      $color_bright_white
	    active_workspace   $color_unused          $color_unused           $color_unused
	    inactive_workspace $color_normal_gray     $color_normal_gray      $color_normal_white
	    urgent_workspace   $color_bright_yellow   $color_bright_yellow    $color_normal_black
        }
}

bar {
	position top
	# position bottom
	i3bar_command i3bar
	tray_output none
	# tray_output primary
	strip_workspace_numbers no
  	separator_symbol " | "
        output DP-1-2
        output DP-1-3

	colors {
	    # Whole color settings
	    background $color_normal_gray
	    separator  $color_bright_gray
	    statusline $colmmor_bright_white

	    # Type             border                 background              font
	    focused_workspace  $color_bright_gray     $color_bright_gray      $color_bright_white
	    active_workspace   $color_unused          $color_unused           $color_unused
	    inactive_workspace $color_normal_gray     $color_normal_gray      $color_normal_white
	    urgent_workspace   $color_bright_yellow   $color_bright_yellow    $color_normal_black
        }
}

# hide/unhide i3status bar
# (mod+Shift+m)
bindcode $mod+Shift+47 bar mode toggle

#############################
### settings for i3-gaps: ###
#############################

# Set inner/outer gaps
gaps inner 5
smart_gaps on

# Smart borders (draw borders around container only if it is not the only container on this workspace)
# on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge of the screen is 0)
smart_borders on

# Press $mod+Shift+g to enter the gap mode. Choose o or i for modifying outer/inner gaps. Press one of + / - (in-/decrement for current workspace) or 0 (remove gaps for current workspace). If you also press Shift with these keys, the change will be global for all workspaces.
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
# (mod+Shift+g)
bindcode $mod+Shift+42 mode "$mode_gaps"

mode "$mode_gaps" {
        # (o)
        bindcode 32 mode "$mode_gaps_outer"
        # (i)
        bindcode 31 mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        # (plus)
        bindcode 21 gaps inner current plus 5
        # (minus)
        bindcode 15 gaps inner current minus 5
        # (0)
        bindcode 19 gaps inner current set 0

        # (plus)
        bindcode Shift+21 gaps inner all plus 5
        # (minus)
        bindcode Shift+15 gaps inner all minus 5
        # (0)
        bindcode Shift+19 gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
        bindcode 21 gaps outer current plus 5
        bindcode 15 gaps outer current minus 5
        bindcode 19 gaps outer current set 0

        bindcode Shift+21 gaps outer all plus 5
        bindcode Shift+15 gaps outer all minus 5
        bindcode Shift+19 gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}


# Cycle through workspaces with mouse.
bindsym --whole-window $mod+button6 workspace next
bindsym --whole-window $mod+button7 workspace prev

# fix icc profile
exec_always xcalib -d :0 ~/.dotfiles/icm/dell_lattitude_7480.icm &

# Autostart some apps
exec_always hsetroot -solid '#333333' &

# Polkit agent
exec /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1 &

# Automatically rename workspaces
exec_always i3-autoname-workspaces &

# Suspend on BAT if idle for 30min
exec_always "pgrep -x xidlehook || (xidlehook --not-when-fullscreen --not-when-audio --socket /tmp/xidlehook_suspend.sock --timer normal 1800 'run-on-bat i3exit suspend' '' &)"

# Lock on idle
exec_always  "pgrep -x xss-lock || (xset s 300 5; xss-lock -n /usr/lib/xsecurelock/dimmer -l -- i3exit lock &)"

# xrandr config
exec  "(sleep 1 && autorandr --change) &"

# start some apps
# exec_always  "pgrep -x conky || /usr/bin/conky -d -q"
exec_always  "pgrep -x solaar || (solaar &)"
exec_always  "pgrep -x nm-applet || (nm-applet &)"
exec_always  numlockx &
exec_always  "killall compton; compton &"
exec_always  "pgrep -x copyq || (copyq &)"
exec_always  "pgrep -x udiskie || (udiskie &)"
exec_always  "pgrep -x unclutter || (unclutter &)"
exec_always  "killall xcape ; xcape -e 'Super_L=Escape'"
exec  "pgrep -x neomutt || (kitty --class neomutt --title neomutt neomutt &)"
exec  "pgrep -x newsboat || (kitty --class newsboat --title newsboat newsboat &)"
exec  "pgrep -x glances || (kitty --class glances --title glances glances &)"
exec  "pgrep -x wire-desktop || (wire-desktop &)"

# Refresh keyboard layout
exec_always  py3-cmd refresh keyboard_layout
exec  syndaemon -d -i 0.2 -t

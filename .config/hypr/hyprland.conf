# Requirements
exec-once = systemctl --user import-environment DISPLAY WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
exec-once = hash dbus-update-activation-environment 2>/dev/null
exec-once = dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
exec-once = systemctl --user start hyprland-session.target

env = MESA_GLES_VERSION_OVERRIDE,3.1
env = MESA_GL_VERSION_OVERRIDE,3.3
env = MESA_GLSL_VERSION_OVERRIDE,330
# env = MESA_LOADER_DRIVER_OVERRIDE,asahi

# Output settings
monitor = eDP-1,preferred,auto,1.2
exec-once = cgtoggle swaybg -c "##1a1c1c" -m solid_color

# Input settings
input {
    kb_layout = fr-hyper,us,ua
    kb_variant = basic,,
    kb_options = grp:shifts_toggle,grp:shift_caps_toggle,caps:hyper
    numlock_by_default = true
    repeat_delay = 300
    repeat_rate = 60
    # follow_mouse = 2
    float_switch_override_focus = 0

    touchpad {
        natural_scroll = true
        disable_while_typing = true
    }
}

binds {
    workspace_back_and_forth = true
}

misc {
    mouse_move_enables_dpms = true
    disable_hyprland_logo = true
    suppress_portal_warnings = true
}

general {
    gaps_in = 5
    gaps_out = 5
    border_size = 2
    col.active_border = rgb(333333)
    col.inactive_border = rgb(222222)
    layout = master
    no_cursor_warps = true
    cursor_inactive_timeout = 10
}

decoration {
    rounding = 5
    dim_inactive = true
    dim_strength = 0.2
}

animations {
    enabled = true

    animation = workspaces, 1, 3, default
    animation = windows,    1, 3, default, slide
    animation = fade,       1, 3, default
    animation = border,     1, 3, default
}

master {
    no_gaps_when_only = true
    new_on_top = true
}

gestures {
    workspace_swipe = on
    workspace_swipe_fingers = 3
    workspace_swipe_min_speed_to_force = 5
    workspace_swipe_cancel_ratio = 0.3
    workspace_swipe_create_new = false
}

# Specific window configuration

windowrule = float,yad|nm-connection-editor|pavucontrol|helvum|opensnitch_ui

windowrulev2 = workspace 1, class:^firefox$
windowrulev2 = workspace 1, class:^personal$
windowrulev2 = workspace 2, class:^work$
windowrulev2 = workspace 3, class:^scli$
windowrulev2 = workspace 3, class:^Signal$
windowrulev2 = workspace 4, class:^neomutt$
windowrulev2 = workspace 10, class:^obsidian$

windowrulev2 = float, class:^dmenu
windowrulev2 = size 60% 70%, class:^dmenu
windowrulev2 = size 50% 20%, class:^dmenu-(browser|emoji)$
windowrulev2 = center, class:^dmenu

windowrulev2 = float, class:^qalculate-gtk$
windowrulev2 = size 40% 60%, class:^qalculate-gtk$
windowrulev2 = center, class:^qalculate-gtk$
windowrulev2 = float, class:^udiskie$
windowrulev2 = float, class:^mpv$
windowrulev2 = nofullscreenrequest, class:^mpv$
windowrulev2 = size 40% 30%, class:^mpv$
windowrulev2 = move 55% 35, class:^mpv$

# Mod keys
$win = MOD3
$hyper = MOD4
$shift = SHIFT
$alt = ALT

# Modes
$submap_resize = ‚ÜîÔ∏è resize window
$submap_audio = üîä audio
$submap_exit = üèÅ system

bind = $win,   a, submap, $submap_audio
bind = $hyper, r, submap, $submap_resize
bind = $win,   escape, submap, $submap_exit

submap = $submap_resize
    binde = , h, resizeactive, -15 0
    binde = , l, resizeactive, 15 0
    binde = , k, resizeactive, 0 -15
    binde = , j, resizeactive, 0 15

    bind  = , escape, submap, reset
    bind  = , return, submap, reset
submap = reset

submap = $submap_audio
    bind = , a, exec, audio bt-connect-headset
    bind = , a, submap, reset
    bind = , h, exec, audio bt-connect-headphones
    bind = , h, submap, reset
    bind = , e, exec, audio bt-connect-earplugs
    bind = , e, submap, reset
    bind = , s, exec, audio bt-connect-speakers
    bind = , s, submap, reset
    bind = , t, exec, audio bt-toggle-profile
    bind = , t, submap, reset
    bind = , d, exec, audio bt-disconnect
    bind = , d, submap, reset
    bind = , p, exec, cgtoggle pavucontrol
    bind = , p, submap, reset

    bind = , return, submap, reset
    bind = , escape, submap, reset
submap = reset

submap = $submap_exit
    bind = , e, exec, exit-wm exit
    bind = , l, exec, exit-wm lock
    bind = , l, submap, reset
    bind = , s, exec, exit-wm suspend
    bind = , s, submap, reset
    bind = , r, exec, exit-wm reboot
    bind = , r, submap, reset
    bind = $shift, h, exec, exit-wm shutdown
    bind = $shift, h, submap, reset
    bind = , t, exec, ttoggle -t
    bind = , t, submap, reset
    bind = , u, exec, ttoggle -x
    bind = , u, submap, reset
    bind = , o, exec, udiskie-umount -a
    bind = , o, submap, reset
    bind = , d, exec, darkman toggle
    bind = , d, submap, reset

    bind = , return, submap, reset
    bind = , escape, submap, reset
submap = reset


# Scroll through existing workspaces with hyper + scroll
bind = $hyper, mouse_down, workspace, e+1
bind = $hyper, mouse_up, workspace, e-1

# Move/resize windows with hyper + LMB/RMB and dragging
bindm = $hyper, mouse:272, movewindow
bindm = $hyper, mouse:273, resizewindow

# Terminal
bind = $hyper, Return, exec, cglaunch --term
# bind = $hyper, Return, exec, alacritty
bind = $win, Return, exec, alacritty
bind = $win$shift, Return, exec, alacritty -e /bin/bash

bind = $hyper, t, togglegroup

# Launcher
bind = $hyper, m,     exec, dailynote
bind = $hyper, equal,     exec, cgtoggle qalculate-gtk
bind = , XF86Calculator,  exec, cgtoggle qalculate-gtk
bind = $hyper, d,         exec, cgtoggle wldash
bind = $hyper, p,         exec, sh -c "wl-clipboard-manager lock; cglaunch passmenu -p pass; wl-clipboard-manager unlock"
bind = $hyper, n,         exec, cgtoggle networkmanager_dmenu
bind = $hyper$shift, n,         exec, cgtoggle pia_dmenu
bind = $win, p,           exec, cgtoggle pass-gen
bind = $win, m,           exec, cgtoggle udiskie-dmenu
bind = $hyper, f,           exec, cgtoggle wl-clipboard-manager dmenu
bind = $hyper, Backspace, exec, cgtoggle emoji-dmenu
bind = $win$shift, b,     exec, sh -c "sleep 1 && hyprctl dispatch dpms off"

# Kill focused window
bind = $win, q, killactive

# Go to urgent or last
bind = $hyper, x, exec, hyprctl dispatcher focusurgentorlast ""

# Change focus
bind = $hyper, h, movefocus, l
bind = $hyper, j, movefocus, d
bind = $hyper, k, movefocus, u
bind = $hyper, l, movefocus, r

# Move focused window
bind = $win, h, movewindow, l
bind = $win, j, movewindow, d
bind = $win, k, movewindow, u
bind = $win, l, movewindow, r

# Enter fullscreen mode
bind = $win, f, fullscreen, 1
bind = $win$shift, f, fullscreen, 0

# Master layout
bind = $hyper, e, layoutmsg, orientationnext
bind = $hyper, w, layoutmsg, swapwithmaster
bind = $hyper, t, layoutmsg, focusmaster
bind = $hyper, u, layoutmsg, addmaster
bind = $hyper, i, layoutmsg, removemaster

# Toggle tiling / floating
bind = $win, space, togglefloating, active

# Go to next window, for example to reach a floating one
binde = $hyper, space, cyclenext
binde = $alt, tab, cyclenext

# Notification actions
bind = $hyper, q,          exec, swaync-client --close-all
bind = $alt, space,        exec, swaync-client --toggle-dnd
bind = $win, n,            exec, swaync-client -t -sw

# System actions
bind = , XF86Eject,                    exec, exit-wm lock
bind = , Pause,                        exec, exit-wm lock
bindl = , XF86PowerOff,                exec, sh -c "sleep 1 && hyprctl dispatch dpms off && light -s sysfs/leds/kbd_backlight -S 0%"
bindl = $shift, XF86PowerOff,          exec, exit-wm shutdown
bindl = , XF86Sleep,                   exec, exit-wm suspend
bind = , XF86Search,                   exec, firefox "https://google.com"

# cut / copy / paste win alt leader # to be fix
# bind = $alt, x, exec, wtype -P XF86Cut
# bind = $alt, c, exec, wtype -P XF86Copy
# bind = $alt, v, exec, wtype -P XF86Paste

# Brightness control
bindle = , XF86MonBrightnessUp,         exec, light -A 1%
bindle = , XF86MonBrightnessDown,       exec, light -U 1%
bindle = $shift, XF86MonBrightnessUp,   exec, light -A 5%
bindle = $shift, XF86MonBrightnessDown, exec, light -U 5%
bindle = $win, XF86MonBrightnessUp,     exec, light -s sysfs/leds/kbd_backlight -A 5%
bindle = $win, XF86MonBrightnessDown,   exec, light -s sysfs/leds/kbd_backlight -U 5%

# Media control
bindl = , XF86AudioPlay, exec, playerctl --player playerctld play-pause
bindl = , XF86AudioNext, exec, playerctl --player playerctld next
bindl = , XF86AudioPrev, exec, playerctl --player playerctld previous
bindl = $hyper, Up,      exec, playerctl --player playerctld play-pause
bindl = $hyper, Down,    exec, playerctl --player playerctld play-pause
bindl = $hyper, Left,    exec, playerctl --player playerctld previous
bindl = $hyper, Right,   exec, playerctl --player playerctld next

bindl = , XF86AudioMute,        exec, audio output-mute
binde = , XF86AudioRaiseVolume, exec, audio output-volume-up
binde = , XF86AudioLowerVolume, exec, audio output-volume-down
bindl = $win, Up,               exec, audio output-mute
bindl = $win, Down,             exec, audio output-mute
bindl = $win, Right,            exec, audio output-volume-up
bindl = $win, Left,             exec, audio output-volume-down
bindl = $win$shift, Up,         exec, audio input-mute
bindl = , XF86AudioMicMute,     exec, audio input-mute
bindl = , XF86AudioRecord,      exec, audio input-mute
bindl = $win$shift, Down,       exec, audio input-mute
bindl = $win$shift, Right,      exec, audio input-volume-up
bindl = $win$shift, Left,       exec, audio input-volume-down

# Switch to workspace using number row
bind = $hyper, ampersand, workspace, 1
bind = $hyper, eacute, workspace, 2
bind = $hyper, quotedbl, workspace, 3
bind = $hyper, apostrophe, workspace, 4
bind = $hyper, parenleft, workspace, 5
bind = $hyper, minus, workspace, 6
bind = $hyper, egrave, workspace, 7
bind = $hyper, exclam, workspace, 8
bind = $hyper, ccedilla, workspace, 9
bind = $hyper, agrave, workspace, 10

# Switch to workspace using keypad
bind = $hyper, KP_1, workspace, 1
bind = $hyper, KP_2, workspace, 2
bind = $hyper, KP_3, workspace, 3
bind = $hyper, KP_4, workspace, 4
bind = $hyper, KP_5, workspace, 5
bind = $hyper, KP_6, workspace, 6
bind = $hyper, KP_7, workspace, 7
bind = $hyper, KP_8, workspace, 8
bind = $hyper, KP_9, workspace, 9
bind = $hyper, KP_0, workspace, 10

# Move window to workspace using number row
bind = $win, ampersand, movetoworkspace, 1
bind = $win, eacute, movetoworkspace, 2
bind = $win, quotedbl, movetoworkspace, 3
bind = $win, apostrophe, movetoworkspace, 4
bind = $win, parenleft, movetoworkspace, 5
bind = $win, minus, movetoworkspace, 6
bind = $win, egrave, movetoworkspace, 7
bind = $win, exclam, movetoworkspace, 8
bind = $win, ccedilla, movetoworkspace, 9
bind = $win, agrave, movetoworkspace, 10

# Move window to workspace using keypad
bind = $win, KP_1, movetoworkspace, 1
bind = $win, KP_2, movetoworkspace, 2
bind = $win, KP_3, movetoworkspace, 3
bind = $win, KP_4, movetoworkspace, 4
bind = $win, KP_5, movetoworkspace, 5
bind = $win, KP_6, movetoworkspace, 6
bind = $win, KP_7, movetoworkspace, 7
bind = $win, KP_8, movetoworkspace, 8
bind = $win, KP_9, movetoworkspace, 9
bind = $win, KP_0, movetoworkspace, 10


# Screen recording
bind = , Print,      exec, cglaunch screenshot-area
bind = , XF86LaunchA, exec, cglaunch screenshot-area
bind = $hyper, Print,       exec, cglaunch screenshot-area window
bind = $hyper, XF86LaunchA, exec, cglaunch screenshot-area window
bind = $hyper$shift, Print,       exec, cglaunch gif-area
bind = $hyper$shift, XF86LaunchA, exec, cglaunch gif-area
bind = $win$shift, Print,         exec, cglaunch screenshare
bind = $win$shift, XF86LaunchA,   exec, cglaunch screenshare
bind = $win, i,                   exec, cglaunch hyprpicker | wl-copy

# Reload
bind = $win, r,                   exec, hyprctl reload

# Turn display off when lid is closed
bindl = , switch:on:Apple SMC power/lid events,  dpms, off
bindl = , switch:off:Apple SMC power/lid events, exec, light -s sysfs/leds/kbd_backlight -S 0%
bindl = , switch:off:Apple SMC power/lid events, dpms, on

# Launch apps on startup
exec = cglaunch firefox
# exec = sh -c "cggrep scli || cglaunch --term -o font_size=12 scli"
exec-once = sh -c "cggrep signal-desktop || cglaunch signal-desktop"
exec-once = sh -c "cggrep neomutt || cglaunch --term neomutt"
exec-once = cggrep nextcloud || cglaunch nextcloud --background
# exec-once = flatpak run md.obsidian.Obsidian
# exec-once = sh -c "cggrep opensnitch-ui || cglaunch opensnitch-ui"


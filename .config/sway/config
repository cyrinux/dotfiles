font pango: Taskbar, Cantarell 9

input type:keyboard {
    xkb_layout fr-hyper,us
    xkb_options grp:shifts_toggle,caps:hyper
}

input type:touchpad {
    natural_scroll enabled
    left_handed enabled
    accel_profile adaptive
    tap enabled
    dwt enabled
}

set $laptop eDP-1
set $screen_left DP-5
set $screen_right DP-6
bindswitch --reload lid:on output $laptop disable
bindswitch --reload lid:off output $laptop enable

# bindswitch --locked --reload lid:off output $laptop enable;  output $screen_left disable; output $screen_right disable
# bindswitch --locked --reload lid:on  output $laptop disable; output $screen_left enable;  output $screen_right enable

output * {
    bg "#222222" solid_color
    scale 1.2
    subpixel rgb
}


seat * hide_cursor 5000

workspace_layout tabbed
hide_edge_borders --i3 none
default_border pixel 2
default_floating_border none


set $alt Mod1
set $numlock Mod2
set $hyper Mod4
set $win Mod3
floating_modifier $hyper

gaps inner 5
smart_gaps on

# Disable cursor jumping
mouse_warping none
focus_follows_mouse no

set $workspace1 workspace number 1
set $workspace2 workspace number 2
set $workspace3 workspace number 3
set $workspace4 workspace number 4
set $workspace5 workspace number 5
set $workspace6 workspace number 6
set $workspace7 workspace number 7
set $workspace8 workspace number 8
set $workspace9 workspace number 9
set $workspace0 workspace number 10

# Assign default outputs to workspaces
workspace 1  output DP-1-3  $laptop
workspace 2  output DP-1-3  $laptop
workspace 3  output DP-1-3  $laptop
workspace 4  output DP-1-3  $laptop
workspace 5  output DP-1-1  $laptop
workspace 6  output DP-1-1  $laptop
workspace 7  output DP-1-1  $laptop
workspace 8  output DP-1-1  $laptop
workspace 9  output DP-1-1  $laptop
workspace 10 output DP-1-1  $laptop

# workspace back and forth (with/without active container)
workspace_auto_back_and_forth yes

# Specific window configuration
for_window    [app_id="org.ksnip.ksnip"] floating enable
for_window    [app_id="qalculate-gtk"] floating enable
for_window    [app_id="wayvnc"] move container to $workspace9
for_window    [app_id="wev"] floating enable
for_window    [app_id="wlfreerdp"] move container to $workspace9
for_window    [class="(?i)zathura"] focus, layout tabbed, border normal
# for_window    [class="Keepassx|Pavucontrol|Steam|Pulseaudio-equalizer-gtk|mpv|vaapi"] floating enable
for_window    [class="neomutt"] move container to $workspace3
for_window    [class="sun-awt-X11-XDialogPeer"] floating enable
for_window    [class="Wire"] move container to $workspace2
for_window    [title="^edit_text$"] floating enable
for_window    [window_role="pop-up"] floating enable

# Audio settings
set $mode_audio Audio: (p)avucontrol, connect (s)hure-bt1, (a)eropex, pulse(e)ffects
mode "$mode_audio" {
    bindsym --to-code {
		 p exec pavucontrol, mode "default"
	     e exec pulseeffects, mode "default"
	     s exec "connect_a2dp 00:0E:DD:06:24:1C", mode "default"
	     a exec "connect_a2dp 20:74:CF:3B:36:A9", mode "default"

        Return mode "default"
	    Escape mode "default"
    }
}


# Set shut down, restart and locking features
set $mode_system (l)ock, (s)uspend, (r)eboot, (Shift+s)hutdown, (t)rusted, (u)ntrusted
mode "$mode_system" {
	bindsym --to-code {
     l exec sway-exit lock, mode "default"
     s exec sway-exit suspend, mode "default"
     r exec sway-exit reboot, mode "default"
     Shift+s exec sway-exit shutdown, mode "default"
     t exec ttoggle -t, mode "default"
     u exec ttoggle -x, mode "default"

     Return mode "default"
     Escape mode "default"
	}
}

# Resize window (you can also use the mouse for that)
mode "resize" {
    bindsym --to-code {
        j resize shrink width 5 px or 5 ppt
        k resize grow height 5 px or 5 ppt
        l resize shrink height 5 px or 5 ppt
        semicolon resize grow width 5 px or 5 ppt

        # same bindings, but for the arrow keys
        Left resize shrink width 10 px or 10 ppt
        Down resize grow height 10 px or 10 ppt
        Up resize shrink height 10 px or 10 ppt
        Right resize grow width 10 px or 10 ppt

        # exit resize mode: Enter or Escape
        Return mode "default"
        Escape mode "default"
    }
}

# Move workspaces between monitors (m)
set $mode_workspaces_monitors Move workspace between monitors
mode "$mode_workspaces_monitors" {
	bindsym --to-code {
	  h exec swaymsg move workspace to output left, mode "default"
	  l exec swaymsg move workspace to output right, mode "default"

	  # back to normal: Enter or Escape
	  Return mode "default"
	  Escape mode "default"
	}
}


# Color scheme (Gruvbox dark)
set $color_normal_white  #a89984
set $color_bright_white  #ebdbb2
set $color_normal_gray   #222222
set $color_bright_gray   #3c3836
set $color_bright_yellow #d79921
set $color_normal_black  #282828
set $color_unused        #ff0000

# Colors                  border                 background             text                   indicator            child_border
client.focused            $color_bright_gray     $color_bright_gray     $color_bright_white    $color_bright_gray   $color_normal_black
client.focused_inactive   $color_bright_gray     $color_bright_gray     $color_bright_white    $color_bright_gray   $color_normal_black
client.unfocused          $color_normal_gray     $color_normal_gray     $color_normal_white    $color_normal_gray   $color_normal_black
client.urgent             $color_bright_yellow   $color_bright_yellow   $color_normal_black    $color_unused        $color_unused
client.placeholder        $color_unused          $color_normal_black    $color_unused          $color_unused        $color_unused

bar {
	colors {
	    # Whole color settings
	    background $color_normal_gray
	    separator  $color_bright_gray
	    statusline $color_bright_white

	    # Type             border                 background              font
	    focused_workspace  $color_bright_gray     $color_bright_gray      $color_bright_white
	    active_workspace   $color_bright_gray     $color_bright_gray      $color_bright_white
	    inactive_workspace $color_normal_gray     $color_normal_gray      $color_normal_white
	    urgent_workspace   $color_bright_yellow   $color_bright_yellow    $color_normal_black
    }

    status_command py3status --dbus-notify
	position top
    hidden_state hide
	tray_output none
	strip_workspace_numbers no
  	separator_symbol " | "
}

bindsym --to-code {
# Media controls
 XF86AudioMute         exec py3-cmd click 1 volume_status
 Shift+XF86AudioMute   exec pamute
 XF86AudioRaiseVolume  exec py3-cmd click 4 volume_status
 XF86AudioLowerVolume  exec py3-cmd click 5 volume_status
 XF86AudioPlay         exec playerctl --player playerctld play-pause
 XF86AudioPrev         exec playerctl --player playerctld previous
 XF86AudioNext         exec playerctl --player playerctld next
 Control+$alt+Up               exec playerctl --player playerctld play-pause
 Control+$alt+Left             exec playerctl --player playerctld previous
 Control+$alt+Right            exec playerctl --player playerctld next
 Control+$alt+Down             exec playerctl --player playerctld stop
 $win+p mode "$mode_audio"

# Screen brightness controls
 XF86MonBrightnessUp         exec set-brightness inc
 XF86MonBrightnessDown       exec set-brightness dec
 Shift+XF86MonBrightnessUp   exec set-brightness inc
 Shift+XF86MonBrightnessDown exec set-brightness dec

 $hyper+n           exec networkmanager_dmenu
 $hyper+m           exec udiskie-dmenu -p "Mount"
 $hyper+F1          exec "sudo -A systemctl restart kresd@1.service; resolvectl flush-caches"
 $win+F1            exec "sudo -A systemctl restart kresd@1.service; resolvectl flush-caches"
 Print              exec "grimshot save $(xdg-user-dir PICTURES)/Screenshots/"
 $hyper+Print       exec "pgrep -x sway-screeshot || sway-screenshot-area"
 $win+Print         exec "sway-gif-recorder start &"
 $win+Shift+Print   exec "sway-gif-recorder stop"

 $hyper+c exec gsimplecal

 $hyper+F8 exec imv /home/cyril/library/Pictures/kak_keybinding.png
 XF86Search exec firefox https://search.levis.ws/

 $hyper+Return exec kitty
 $win+Return exec kitty

 $win+q kill

 Shift+F2 exec "open-vault 7200 &"

 $hyper+equal fullscreen disable, exec bash -c "dmenu -p calc | xargs -r qalc -t | tee >(wl-copy) >(xargs -I{} notify-send 'calc result' '{}')"
 $hyper+w     fullscreen disable, exec "surfraw-rofi"
 $win+w       fullscreen disable, exec "surfraw duckduckgo -j $(wl-paste)"
 $hyper+p     fullscreen disable, exec "pgrep -x dmenu && pkill dmenu || { sway-paste lock; passmenu -p 'pass'; sway-paste unlock; }"
 $hyper+f	  fullscreen disable, exec "pgrep -x dmenu && pkill dmenu || sway-paste dmenu"
 twosuperior  fullscreen disable, exec "rofi-todoist"
 $hyper+d     fullscreen disable, exec "pgrep wofi && killall wofi || wofi"

# Switch to workspace using number row
 $hyper+ampersand $workspace1
 $hyper+eacute $workspace2
 $hyper+quotedbl $workspace3
 $hyper+apostrophe $workspace4
 $hyper+parenleft $workspace5
 $hyper+minus $workspace6
 $hyper+egrave $workspace7
 $hyper+underscore $workspace8
 $hyper+ccedilla $workspace9
 $hyper+agrave $workspace0

# Move window to workspace using number row
 $win+ampersand  move container to $workspace1
 $win+eacute     move container to $workspace2
 $win+quotedbl   move container to $workspace3
 $win+apostrophe move container to $workspace4
 $win+parenleft  move container to $workspace5
 $win+minus      move container to $workspace6
 $win+egrave     move container to $workspace7
 $win+underscore move container to $workspace8
 $win+ccedilla   move container to $workspace9
 $win+agrave     move container to $workspace0

# alternatively, you can use the cursor keys:
 $hyper+Left focus left
 $hyper+Down focus down
 $hyper+Up focus up
 $hyper+Right focus right

# alternatively, you can use the cursor keys:
 $win+Left  move left
 $win+Down  move down
 $win+Up    move up
 $win+Right move right

 $hyper+s split toggle
# move workspace to the right monitor
 $win+BackSpace move workspace to output right
 $hyper+BackSpace move container to output right

# toggle fullscreen mode for the focused container
 $win+f fullscreen toggle, inhibit_idle fullscreen
 $hyper+t layout tabbed
 $hyper+e layout toggle tabbed splith splitv stacked

# toggle tiling / floating
 $win+space floating toggle

# change focus between tiling / floating windows
 $hyper+space focus mode_toggle

# toggle sticky (Shift+s)
 $win+s sticky toggle

# focus the parent container (hyper+a)
 $hyper+a focus parent

# Focus the child container (hyper+z)
 $hyper+z focus child

# move the currently focused window to the scratchpad
 $win+twosuperior move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
 $hyper+twosuperior scratchpad show

#navigate workspaces next / previous
 $hyper+Ctrl+Right workspace next
 $hyper+Ctrl+Left workspace prev

# switch to workspace with urgent window automatically
 $win+x [urgent=latest] focus

# reload the configuration file
 $win+r reload

 $hyper+Escape mode "$mode_system"
 $hyper+r mode "resize"
 $win+l exec sway-exit lock
 $hyper+l exec sway-exit lock
 Control+$alt+l exec sway-exit lock
 $win+Control+m floating enable; resize set 320 px 180 px; sticky enable; move window to position 1600 px 24 px
 $win+Shift+m bar mode toggle
 $win+m mode $mode_workspaces_monitors

 Ctrl+Space exec makoctl dismiss
 Ctrl+Shift+Space exec makoctl dismiss --all
 $hyper+o exec makoctl menu dmenu
}

# exec_always "pgrep -x kanshi || kanshi"
exec_always "pgrep -x mako || mako"
exec_always "pgrep -x nm-applet || nm-applet"
exec_always "pgrep -x opensnitch-ui || opensnitch-ui"
exec_always "pgrep -x redshift || redshift"
exec_always "pgrep -x solaar || solaar --restart-on-wake-up"
exec_always "pgrep -x udiskie || udiskie"
exec_always "pgrep -x sway-autoname-w; sway-autoname-workspaces -d"
exec "kitty --class neomutt --title neomutt neomutt"
exec_always "pgrep -fx 'sh /usr/bin/wire-desktop' || wire-desktop"
exec_always "pgrep -x sway-fade-inact || sway-fade-inactive -o 0.7"
exec_always "pgrep -x sway-paste || sway-paste daemon"
exec_always swayidle -w timeout 180 'sway-exit lock' resume 'swaymsg "output * dpms on"' before-sleep 'sway-exit lock'

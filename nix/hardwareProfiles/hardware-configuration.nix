# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/91f67555-9089-4863-8686-40754d9f828e";
      fsType = "btrfs";
      options = [ "subvol=root" ];
    };

  boot.initrd.luks.devices."luks".device = "/dev/disk/by-uuid/290584d0-33aa-471a-a0a3-39445c33d4e0";

  fileSystems."/nix" =
    { device = "/dev/disk/by-uuid/91f67555-9089-4863-8686-40754d9f828e";
      fsType = "btrfs";
      options = [ "subvol=nix" ];
    };

  fileSystems."/var/log" =
    { device = "/dev/disk/by-uuid/91f67555-9089-4863-8686-40754d9f828e";
      fsType = "btrfs";
      options = [ "subvol=logs" ];
    };

  fileSystems."/.snapshots" =
    { device = "/dev/disk/by-uuid/91f67555-9089-4863-8686-40754d9f828e";
      fsType = "btrfs";
      options = [ "subvol=snapshots" ];
    };

  fileSystems."/mnt/btrfs-root" =
    { device = "/dev/disk/by-uuid/91f67555-9089-4863-8686-40754d9f828e";
      fsType = "btrfs";
    };

  fileSystems."/home" =
    { device = "/dev/disk/by-uuid/91f67555-9089-4863-8686-40754d9f828e";
      fsType = "btrfs";
      options = [ "subvol=home" ];
    };

  fileSystems."/swap" =
    { device = "/dev/disk/by-uuid/91f67555-9089-4863-8686-40754d9f828e";
      fsType = "btrfs";
      options = [ "subvol=swap" ];
    };

  fileSystems."/var/tmp" =
    { device = "/dev/disk/by-uuid/91f67555-9089-4863-8686-40754d9f828e";
      fsType = "btrfs";
      options = [ "subvol=temp" ];
    };

  fileSystems."/var/lib/docker" =
    { device = "/dev/disk/by-uuid/91f67555-9089-4863-8686-40754d9f828e";
      fsType = "btrfs";
      options = [ "subvol=home" ];
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/82D8-1A1B";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlan0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "aarch64-linux";
}
